name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"
          
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          
      - name: Install dependencies
        run: |
          go mod download
          go mod tidy
        
      - name: Install linting tools
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/mgechev/revive@latest
          
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m
          
      - name: Run additional linting tools
        run: |
          staticcheck -checks all ./...
          revive -formatter friendly -exclude ./vendor/... ./...

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.25"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          
      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Format check
        run: |
          go fmt ./...
          if [ -n "$(git diff --name-only)" ]; then
            echo "Code is not formatted properly"
            git diff
            exit 1
          fi
          
      - name: Vet
        run: go vet ./...
        
      - name: Build
        run: go build -o bin/uvui ./cmd
        
      - name: Test
        run: go test ./... -v
        
      - name: Test with race detection
        run: go test -race ./... -v
        
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    env:
      GOSECGOVERSION: go1.25.0
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Setup Go
        uses: actions/setup-go@v5
    
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy
          
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...